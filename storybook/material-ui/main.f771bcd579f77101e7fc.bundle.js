(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1514:function(module,exports,__webpack_require__){var api=__webpack_require__(1515),content=__webpack_require__(1516);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1},exported=(api(content,options),content.locals?content.locals:{});module.exports=exported},1516:function(module,exports,__webpack_require__){(exports=__webpack_require__(1517)(!1)).push([module.i,"body {\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n#root {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1;\n}\n",""]),module.exports=exports},1518:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(127);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(1520)],module)}.call(this,__webpack_require__(1519)(module))},1520:function(module,exports,__webpack_require__){var map={"./stories/cards.story.tsx":1521,"./stories/charts/area-chart.story.tsx":1524,"./stories/charts/bar-chart.story.tsx":1525,"./stories/charts/donut-charts.story.tsx":1526,"./stories/charts/line-chart.story.tsx":1527,"./stories/charts/pie-charts.story.tsx":1528,"./stories/charts/scatterplot-chart.story.tsx":1529,"./stories/interactive/hover-value.story.tsx":1530,"./stories/interactive/tooltip.story.tsx":1531};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1520},1521:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"BarChart",(function(){return BarChart})),__webpack_require__.d(__webpack_exports__,"LineChart",(function(){return LineChart}));var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(646),_material_ui_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(649),_material_ui_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(647),_material_ui_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(648),react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__),___WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource),__SOURCE_PREFIX__="/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories",__STORY__="import { Box, Card, CardHeader, CardContent } from '@material-ui/core';\nimport React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '..';\n\nexport default { title: 'Vega Material UI/Cards' };\n\nexport const BarChart = (): ReactElement => (\n  <Box clone display=\"inline-block\">\n    <Card>\n      <CardHeader title=\"Customer feedback\" subheader=\"Positive comments\" />\n      <CardContent>\n        <MuiVegaLite\n          variant=\"verticalBarChart\"\n          actions={false}\n          spec={{\n            $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n            width: { step: 55 },\n            data: {\n              values: [\n                { quarter: 'Q1', percent: 0.2 },\n                { quarter: 'Q2', percent: 0.28 },\n                { quarter: 'Q3', percent: 0.32 },\n                { quarter: 'Q4', percent: 0.39 }\n              ]\n            },\n            mark: 'bar',\n            encoding: {\n              x: {\n                field: 'quarter',\n                type: 'nominal',\n                axis: {\n                  ticks: false\n                },\n                band: 0.5\n              },\n              y: {\n                field: 'percent',\n                type: 'quantitative',\n                axis: {\n                  format: 'p'\n                }\n              }\n            }\n          }}\n        />\n      </CardContent>\n    </Card>\n  </Box>\n);\n\nexport const LineChart = (): ReactElement => (\n  <Box clone display=\"inline-block\">\n    <Card>\n      <CardHeader title=\"GOOG\" subheader=\"Google's stock price over time.\" />\n      <CardContent>\n        <MuiVegaLite\n          variant=\"lineChart\"\n          actions={false}\n          spec={{\n            $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n            description: \"Google's stock price over time.\",\n            data: {\n              url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n            },\n            transform: [{ filter: \"datum.symbol==='GOOG'\" }],\n            mark: 'line',\n            encoding: {\n              x: { field: 'date', type: 'temporal' },\n              y: {\n                field: 'price',\n                type: 'quantitative'\n              }\n            }\n          }}\n        />\n      </CardContent>\n    </Card>\n  </Box>\n);\n",__ADDS_MAP__={"vega-material-ui-cards--bar-chart":{startLoc:{col:24,line:7},endLoc:{col:1,line:49},startBody:{col:24,line:7},endBody:{col:1,line:49}},"vega-material-ui-cards--line-chart":{startLoc:{col:25,line:51},endLoc:{col:1,line:79},startBody:{col:25,line:51},endBody:{col:1,line:79}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import { Box, Card, CardHeader, CardContent } from '@material-ui/core';\nimport React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '..';\n\nexport default { title: 'Vega Material UI/Cards' };\n\nexport const BarChart = (): ReactElement => (\n  <Box clone display=\"inline-block\">\n    <Card>\n      <CardHeader title=\"Customer feedback\" subheader=\"Positive comments\" />\n      <CardContent>\n        <MuiVegaLite\n          variant=\"verticalBarChart\"\n          actions={false}\n          spec={{\n            $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n            width: { step: 55 },\n            data: {\n              values: [\n                { quarter: 'Q1', percent: 0.2 },\n                { quarter: 'Q2', percent: 0.28 },\n                { quarter: 'Q3', percent: 0.32 },\n                { quarter: 'Q4', percent: 0.39 }\n              ]\n            },\n            mark: 'bar',\n            encoding: {\n              x: {\n                field: 'quarter',\n                type: 'nominal',\n                axis: {\n                  ticks: false\n                },\n                band: 0.5\n              },\n              y: {\n                field: 'percent',\n                type: 'quantitative',\n                axis: {\n                  format: 'p'\n                }\n              }\n            }\n          }}\n        />\n      </CardContent>\n    </Card>\n  </Box>\n);\n\nexport const LineChart = (): ReactElement => (\n  <Box clone display=\"inline-block\">\n    <Card>\n      <CardHeader title=\"GOOG\" subheader=\"Google's stock price over time.\" />\n      <CardContent>\n        <MuiVegaLite\n          variant=\"lineChart\"\n          actions={false}\n          spec={{\n            $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n            description: \"Google's stock price over time.\",\n            data: {\n              url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n            },\n            transform: [{ filter: \"datum.symbol==='GOOG'\" }],\n            mark: 'line',\n            encoding: {\n              x: { field: 'date', type: 'temporal' },\n              y: {\n                field: 'price',\n                type: 'quantitative'\n              }\n            }\n          }}\n        />\n      </CardContent>\n    </Card>\n  </Box>\n);\n",locationsMap:{"vega-material-ui-cards--bar-chart":{startLoc:{col:24,line:7},endLoc:{col:1,line:49},startBody:{col:24,line:7},endBody:{col:1,line:49}},"vega-material-ui-cards--line-chart":{startLoc:{col:25,line:51},endLoc:{col:1,line:79},startBody:{col:25,line:51},endBody:{col:1,line:79}}}}},title:"Vega Material UI/Cards"};var _ref=react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.a,{title:"Customer feedback",subheader:"Positive comments"}),BarChart=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.a,{clone:!0,display:"inline-block"},react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,null,_ref,react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.a,null,react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(___WEBPACK_IMPORTED_MODULE_5__.a,{variant:"verticalBarChart",actions:!1,spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",width:{step:55},data:{values:[{quarter:"Q1",percent:.2},{quarter:"Q2",percent:.28},{quarter:"Q3",percent:.32},{quarter:"Q4",percent:.39}]},mark:"bar",encoding:{x:{field:"quarter",type:"nominal",axis:{ticks:!1},band:.5},y:{field:"percent",type:"quantitative",axis:{format:"p"}}}}}))))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/cards.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),_ref2=react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.a,{title:"GOOG",subheader:"Google's stock price over time."}),LineChart=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.a,{clone:!0,display:"inline-block"},react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,null,_ref2,react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.a,null,react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(___WEBPACK_IMPORTED_MODULE_5__.a,{variant:"lineChart",actions:!1,spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",description:"Google's stock price over time.",data:{url:"https://vega.github.io/vega-lite/examples/data/stocks.csv"},transform:[{filter:"datum.symbol==='GOOG'"}],mark:"line",encoding:{x:{field:"date",type:"temporal"},y:{field:"price",type:"quantitative"}}}}))))}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/cards.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1524:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Stacked",(function(){return Stacked})),__webpack_require__.d(__webpack_exports__,"AreaLine",(function(){return AreaLine}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource),__SOURCE_PREFIX__="/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/charts",__STORY__="import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Area Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      mark: 'area',\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        },\n        y: {\n          aggregate: 'sum',\n          field: 'count',\n          type: 'quantitative'\n        }\n      }\n    }}\n  />\n);\n\nexport const Stacked = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: 'Area chart showing weight of cars over time.',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      mark: 'area',\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        },\n        y: {\n          aggregate: 'sum',\n          field: 'count',\n          type: 'quantitative',\n          axis: {\n            orient: 'left',\n            labelAlign: 'right'\n          }\n        },\n        color: {\n          field: 'series',\n          type: 'nominal',\n          scale: { scheme: 'category20b' }\n        }\n      }\n    }}\n    config={{\n      legend: {\n        orient: 'right'\n      }\n    }}\n  />\n);\n\nexport const AreaLine = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaLineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      mark: 'area',\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        },\n        y: {\n          aggregate: 'sum',\n          field: 'count',\n          type: 'quantitative'\n        }\n      }\n    }}\n  />\n);\n",__ADDS_MAP__={"vega-material-ui-charts-area-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:33},startBody:{col:21,line:6},endBody:{col:1,line:33}},"vega-material-ui-charts-area-chart--stacked":{startLoc:{col:23,line:35},endLoc:{col:1,line:77},startBody:{col:23,line:35},endBody:{col:1,line:77}},"vega-material-ui-charts-area-chart--area-line":{startLoc:{col:24,line:79},endLoc:{col:1,line:106},startBody:{col:24,line:79},endBody:{col:1,line:106}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Area Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      mark: 'area',\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        },\n        y: {\n          aggregate: 'sum',\n          field: 'count',\n          type: 'quantitative'\n        }\n      }\n    }}\n  />\n);\n\nexport const Stacked = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: 'Area chart showing weight of cars over time.',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      mark: 'area',\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        },\n        y: {\n          aggregate: 'sum',\n          field: 'count',\n          type: 'quantitative',\n          axis: {\n            orient: 'left',\n            labelAlign: 'right'\n          }\n        },\n        color: {\n          field: 'series',\n          type: 'nominal',\n          scale: { scheme: 'category20b' }\n        }\n      }\n    }}\n    config={{\n      legend: {\n        orient: 'right'\n      }\n    }}\n  />\n);\n\nexport const AreaLine = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaLineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      mark: 'area',\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        },\n        y: {\n          aggregate: 'sum',\n          field: 'count',\n          type: 'quantitative'\n        }\n      }\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-charts-area-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:33},startBody:{col:21,line:6},endBody:{col:1,line:33}},"vega-material-ui-charts-area-chart--stacked":{startLoc:{col:23,line:35},endLoc:{col:1,line:77},startBody:{col:23,line:35},endBody:{col:1,line:77}},"vega-material-ui-charts-area-chart--area-line":{startLoc:{col:24,line:79},endLoc:{col:1,line:106},startBody:{col:24,line:79},endBody:{col:1,line:106}}}}},title:"Vega Material UI/Charts/Area Chart"};var Basic=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"areaChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",width:300,height:200,data:{url:"https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json"},mark:"area",encoding:{x:{timeUnit:"yearmonth",field:"date",type:"temporal",axis:{format:"%Y"}},y:{aggregate:"sum",field:"count",type:"quantitative"}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/area-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),Stacked=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"areaChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",description:"Area chart showing weight of cars over time.",width:300,height:200,data:{url:"https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json"},mark:"area",encoding:{x:{timeUnit:"yearmonth",field:"date",type:"temporal",axis:{format:"%Y"}},y:{aggregate:"sum",field:"count",type:"quantitative",axis:{orient:"left",labelAlign:"right"}},color:{field:"series",type:"nominal",scale:{scheme:"category20b"}}}},config:{legend:{orient:"right"}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/area-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),AreaLine=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"areaLineChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",width:300,height:200,data:{url:"https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json"},mark:"area",encoding:{x:{timeUnit:"yearmonth",field:"date",type:"temporal",axis:{format:"%Y"}},y:{aggregate:"sum",field:"count",type:"quantitative"}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/area-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1525:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Horizontal",(function(){return Horizontal})),__webpack_require__.d(__webpack_exports__,"Focused",(function(){return Focused}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource),__SOURCE_PREFIX__="/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/charts",__STORY__="import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default {\n  title: 'Vega Material UI/Charts/Bar Chart'\n};\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"verticalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: { step: 55 },\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      mark: 'bar',\n      encoding: {\n        x: {\n          field: 'quarter',\n          type: 'nominal',\n          axis: {\n            ticks: false\n          },\n          band: 0.5\n        },\n        y: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        }\n      }\n    }}\n  />\n);\n\nexport const Horizontal = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"horizontalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      height: { step: 55 },\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      mark: 'bar',\n      encoding: {\n        x: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        },\n        y: {\n          field: 'quarter',\n          type: 'nominal',\n\n          band: 0.5\n        }\n      }\n    }}\n  />\n);\n\nexport const Focused = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"focusedVerticalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 200,\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      layer: [\n        {\n          mark: 'bar'\n        },\n        {\n          mark: {\n            type: 'text',\n            baseline: 'top',\n            align: 'center',\n            dy: 4,\n            dx: -8\n          },\n          encoding: {\n            text: { field: 'percent', type: 'ordinal', format: '.0p' },\n            color: {\n              value: 'rgba(255, 255, 255, 1)'\n            }\n          }\n        }\n      ],\n      encoding: {\n        x: {\n          field: 'quarter',\n          type: 'nominal',\n          band: 0.7\n        },\n        y: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        }\n      }\n    }}\n  />\n);\n",__ADDS_MAP__={"vega-material-ui-charts-bar-chart--basic":{startLoc:{col:21,line:8},endLoc:{col:1,line:42},startBody:{col:21,line:8},endBody:{col:1,line:42}},"vega-material-ui-charts-bar-chart--horizontal":{startLoc:{col:26,line:44},endLoc:{col:1,line:76},startBody:{col:26,line:44},endBody:{col:1,line:76}},"vega-material-ui-charts-bar-chart--focused":{startLoc:{col:23,line:78},endLoc:{col:1,line:128},startBody:{col:23,line:78},endBody:{col:1,line:128}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default {\n  title: 'Vega Material UI/Charts/Bar Chart'\n};\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"verticalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: { step: 55 },\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      mark: 'bar',\n      encoding: {\n        x: {\n          field: 'quarter',\n          type: 'nominal',\n          axis: {\n            ticks: false\n          },\n          band: 0.5\n        },\n        y: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        }\n      }\n    }}\n  />\n);\n\nexport const Horizontal = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"horizontalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      height: { step: 55 },\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      mark: 'bar',\n      encoding: {\n        x: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        },\n        y: {\n          field: 'quarter',\n          type: 'nominal',\n\n          band: 0.5\n        }\n      }\n    }}\n  />\n);\n\nexport const Focused = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"focusedVerticalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 200,\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      layer: [\n        {\n          mark: 'bar'\n        },\n        {\n          mark: {\n            type: 'text',\n            baseline: 'top',\n            align: 'center',\n            dy: 4,\n            dx: -8\n          },\n          encoding: {\n            text: { field: 'percent', type: 'ordinal', format: '.0p' },\n            color: {\n              value: 'rgba(255, 255, 255, 1)'\n            }\n          }\n        }\n      ],\n      encoding: {\n        x: {\n          field: 'quarter',\n          type: 'nominal',\n          band: 0.7\n        },\n        y: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        }\n      }\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-charts-bar-chart--basic":{startLoc:{col:21,line:8},endLoc:{col:1,line:42},startBody:{col:21,line:8},endBody:{col:1,line:42}},"vega-material-ui-charts-bar-chart--horizontal":{startLoc:{col:26,line:44},endLoc:{col:1,line:76},startBody:{col:26,line:44},endBody:{col:1,line:76}},"vega-material-ui-charts-bar-chart--focused":{startLoc:{col:23,line:78},endLoc:{col:1,line:128},startBody:{col:23,line:78},endBody:{col:1,line:128}}}}},title:"Vega Material UI/Charts/Bar Chart"};var Basic=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"verticalBarChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",width:{step:55},data:{values:[{quarter:"Q1",percent:.2},{quarter:"Q2",percent:.28},{quarter:"Q3",percent:.32},{quarter:"Q4",percent:.39}]},mark:"bar",encoding:{x:{field:"quarter",type:"nominal",axis:{ticks:!1},band:.5},y:{field:"percent",type:"quantitative",axis:{format:"p"}}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/bar-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),Horizontal=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"horizontalBarChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",height:{step:55},data:{values:[{quarter:"Q1",percent:.2},{quarter:"Q2",percent:.28},{quarter:"Q3",percent:.32},{quarter:"Q4",percent:.39}]},mark:"bar",encoding:{x:{field:"percent",type:"quantitative",axis:{format:"p"}},y:{field:"quarter",type:"nominal",band:.5}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/bar-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),Focused=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"focusedVerticalBarChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",width:200,data:{values:[{quarter:"Q1",percent:.2},{quarter:"Q2",percent:.28},{quarter:"Q3",percent:.32},{quarter:"Q4",percent:.39}]},layer:[{mark:"bar"},{mark:{type:"text",baseline:"top",align:"center",dy:4,dx:-8},encoding:{text:{field:"percent",type:"ordinal",format:".0p"},color:{value:"rgba(255, 255, 255, 1)"}}}],encoding:{x:{field:"quarter",type:"nominal",band:.7},y:{field:"percent",type:"quantitative",axis:{format:"p"}}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/bar-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1526:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource);__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Donut Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"donutChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega/v5.json',\n      width: 200,\n      height: 200,\n      data: [\n        {\n          name: 'table',\n          values: [\n            { id: 'A', field: 4 },\n            { id: 'B', field: 6 },\n            { id: 'C', field: 10 },\n            { id: 'D', field: 3 },\n            { id: 'E', field: 7 },\n            { id: 'Other', field: 8 }\n          ],\n          transform: [\n            {\n              type: 'pie',\n              field: 'field'\n            }\n          ]\n        },\n        {\n          name: 'used',\n          source: 'table',\n          transform: [\n            {\n              type: 'formula',\n              expr: \"datum.id === 'Other' ? 'Other' : 'Main'\",\n              as: 'id'\n            },\n            {\n              type: 'aggregate',\n              fields: ['field'],\n              groupby: ['id'],\n              ops: ['sum'],\n              as: ['sum']\n            },\n            {\n              type: 'pivot',\n              field: 'id',\n              value: 'sum'\n            }\n          ]\n        }\n      ],\n      scales: [\n        {\n          name: 'color',\n          type: 'ordinal',\n          domain: { data: 'table', field: 'id' },\n          range: { scheme: 'category20' }\n        }\n      ],\n      marks: [\n        {\n          type: 'arc',\n          from: { data: 'table' },\n          encode: {\n            enter: {\n              fill: { scale: 'color', field: 'id' },\n              x: { signal: 'width / 2' },\n              y: { signal: 'height / 2' },\n              padAngle: { value: 0.01 }\n            },\n            update: {\n              startAngle: { field: 'startAngle' },\n              endAngle: { field: 'endAngle' },\n              innerRadius: { signal: 'width / 2 - 10' },\n              outerRadius: { signal: 'width / 2' }\n            }\n          }\n        },\n        {\n          type: 'text',\n          from: { data: 'used' },\n          style: ['percent'],\n          encode: {\n            enter: {\n              x: { signal: 'width / 2' },\n              y: { signal: 'height / 2' },\n              align: { value: 'center' },\n              baseline: { value: 'middle' },\n              fontSize: { value: 24 }\n            },\n            update: {\n              text: {\n                signal:\n                  \"format(datum.Main / (datum.Main + datum.Other), '0.0%')\"\n              }\n            }\n          }\n        }\n      ],\n      legends: [\n        {\n          fill: 'color',\n          direction: 'horizontal',\n          encode: {\n            labels: {\n              name: 'legendLabel',\n              enter: { text: { field: 'id' } }\n            }\n          }\n        }\n      ]\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-charts-donut-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:117},startBody:{col:21,line:6},endBody:{col:1,line:117}}}}},title:"Vega Material UI/Charts/Donut Chart"};var Basic=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"donutChart",spec:{$schema:"https://vega.github.io/schema/vega/v5.json",width:200,height:200,data:[{name:"table",values:[{id:"A",field:4},{id:"B",field:6},{id:"C",field:10},{id:"D",field:3},{id:"E",field:7},{id:"Other",field:8}],transform:[{type:"pie",field:"field"}]},{name:"used",source:"table",transform:[{type:"formula",expr:"datum.id === 'Other' ? 'Other' : 'Main'",as:"id"},{type:"aggregate",fields:["field"],groupby:["id"],ops:["sum"],as:["sum"]},{type:"pivot",field:"id",value:"sum"}]}],scales:[{name:"color",type:"ordinal",domain:{data:"table",field:"id"},range:{scheme:"category20"}}],marks:[{type:"arc",from:{data:"table"},encode:{enter:{fill:{scale:"color",field:"id"},x:{signal:"width / 2"},y:{signal:"height / 2"},padAngle:{value:.01}},update:{startAngle:{field:"startAngle"},endAngle:{field:"endAngle"},innerRadius:{signal:"width / 2 - 10"},outerRadius:{signal:"width / 2"}}}},{type:"text",from:{data:"used"},style:["percent"],encode:{enter:{x:{signal:"width / 2"},y:{signal:"height / 2"},align:{value:"center"},baseline:{value:"middle"},fontSize:{value:24}},update:{text:{signal:"format(datum.Main / (datum.Main + datum.Other), '0.0%')"}}}}],legends:[{fill:"color",direction:"horizontal",encode:{labels:{name:"legendLabel",enter:{text:{field:"id"}}}}}]}})}),{__STORY__:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Donut Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"donutChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega/v5.json',\n      width: 200,\n      height: 200,\n      data: [\n        {\n          name: 'table',\n          values: [\n            { id: 'A', field: 4 },\n            { id: 'B', field: 6 },\n            { id: 'C', field: 10 },\n            { id: 'D', field: 3 },\n            { id: 'E', field: 7 },\n            { id: 'Other', field: 8 }\n          ],\n          transform: [\n            {\n              type: 'pie',\n              field: 'field'\n            }\n          ]\n        },\n        {\n          name: 'used',\n          source: 'table',\n          transform: [\n            {\n              type: 'formula',\n              expr: \"datum.id === 'Other' ? 'Other' : 'Main'\",\n              as: 'id'\n            },\n            {\n              type: 'aggregate',\n              fields: ['field'],\n              groupby: ['id'],\n              ops: ['sum'],\n              as: ['sum']\n            },\n            {\n              type: 'pivot',\n              field: 'id',\n              value: 'sum'\n            }\n          ]\n        }\n      ],\n      scales: [\n        {\n          name: 'color',\n          type: 'ordinal',\n          domain: { data: 'table', field: 'id' },\n          range: { scheme: 'category20' }\n        }\n      ],\n      marks: [\n        {\n          type: 'arc',\n          from: { data: 'table' },\n          encode: {\n            enter: {\n              fill: { scale: 'color', field: 'id' },\n              x: { signal: 'width / 2' },\n              y: { signal: 'height / 2' },\n              padAngle: { value: 0.01 }\n            },\n            update: {\n              startAngle: { field: 'startAngle' },\n              endAngle: { field: 'endAngle' },\n              innerRadius: { signal: 'width / 2 - 10' },\n              outerRadius: { signal: 'width / 2' }\n            }\n          }\n        },\n        {\n          type: 'text',\n          from: { data: 'used' },\n          style: ['percent'],\n          encode: {\n            enter: {\n              x: { signal: 'width / 2' },\n              y: { signal: 'height / 2' },\n              align: { value: 'center' },\n              baseline: { value: 'middle' },\n              fontSize: { value: 24 }\n            },\n            update: {\n              text: {\n                signal:\n                  \"format(datum.Main / (datum.Main + datum.Other), '0.0%')\"\n              }\n            }\n          }\n        }\n      ],\n      legends: [\n        {\n          fill: 'color',\n          direction: 'horizontal',\n          encode: {\n            labels: {\n              name: 'legendLabel',\n              enter: { text: { field: 'id' } }\n            }\n          }\n        }\n      ]\n    }}\n  />\n);\n",__ADDS_MAP__:{"vega-material-ui-charts-donut-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:117},startBody:{col:21,line:6},endBody:{col:1,line:117}}},__MAIN_FILE_LOCATION__:"/donut-charts.story.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/charts",__IDS_TO_FRAMEWORKS__:{}})},1527:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"LabeledLines",(function(){return LabeledLines}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource),__SOURCE_PREFIX__="/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/charts",__STORY__="import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Line Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: \"Google's stock price over time.\",\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      transform: [{ filter: \"datum.symbol==='GOOG'\" }],\n      mark: 'line',\n      encoding: {\n        x: { field: 'date', type: 'temporal' },\n        y: {\n          field: 'price',\n          type: 'quantitative'\n        }\n      }\n    }}\n  />\n);\n\nexport const LabeledLines = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: 'Multi-series line chart with labels.',\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      transform: [{ filter: \"datum.symbol!=='IBM'\" }],\n      encoding: { color: { field: 'symbol', type: 'nominal', legend: null } },\n      layer: [\n        {\n          mark: 'line',\n          encoding: {\n            x: { field: 'date', type: 'temporal', title: 'date' },\n            y: { field: 'price', type: 'quantitative', title: 'price' }\n          }\n        },\n        {\n          encoding: {\n            x: { aggregate: 'max', field: 'date', type: 'temporal' },\n            y: {\n              aggregate: { argmax: 'date' },\n              field: 'price',\n              type: 'quantitative',\n              axis: {\n                orient: 'left',\n                labelAlign: 'right'\n              }\n            }\n          },\n          layer: [\n            { mark: { type: 'circle' } },\n            {\n              mark: { type: 'text', align: 'left', dx: 4 },\n              encoding: { text: { field: 'symbol', type: 'nominal' } }\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n",__ADDS_MAP__={"vega-material-ui-charts-line-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:26},startBody:{col:21,line:6},endBody:{col:1,line:26}},"vega-material-ui-charts-line-chart--labeled-lines":{startLoc:{col:28,line:28},endLoc:{col:1,line:71},startBody:{col:28,line:28},endBody:{col:1,line:71}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Line Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: \"Google's stock price over time.\",\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      transform: [{ filter: \"datum.symbol==='GOOG'\" }],\n      mark: 'line',\n      encoding: {\n        x: { field: 'date', type: 'temporal' },\n        y: {\n          field: 'price',\n          type: 'quantitative'\n        }\n      }\n    }}\n  />\n);\n\nexport const LabeledLines = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: 'Multi-series line chart with labels.',\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      transform: [{ filter: \"datum.symbol!=='IBM'\" }],\n      encoding: { color: { field: 'symbol', type: 'nominal', legend: null } },\n      layer: [\n        {\n          mark: 'line',\n          encoding: {\n            x: { field: 'date', type: 'temporal', title: 'date' },\n            y: { field: 'price', type: 'quantitative', title: 'price' }\n          }\n        },\n        {\n          encoding: {\n            x: { aggregate: 'max', field: 'date', type: 'temporal' },\n            y: {\n              aggregate: { argmax: 'date' },\n              field: 'price',\n              type: 'quantitative',\n              axis: {\n                orient: 'left',\n                labelAlign: 'right'\n              }\n            }\n          },\n          layer: [\n            { mark: { type: 'circle' } },\n            {\n              mark: { type: 'text', align: 'left', dx: 4 },\n              encoding: { text: { field: 'symbol', type: 'nominal' } }\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-charts-line-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:26},startBody:{col:21,line:6},endBody:{col:1,line:26}},"vega-material-ui-charts-line-chart--labeled-lines":{startLoc:{col:28,line:28},endLoc:{col:1,line:71},startBody:{col:28,line:28},endBody:{col:1,line:71}}}}},title:"Vega Material UI/Charts/Line Chart"};var Basic=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"lineChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",description:"Google's stock price over time.",data:{url:"https://vega.github.io/vega-lite/examples/data/stocks.csv"},transform:[{filter:"datum.symbol==='GOOG'"}],mark:"line",encoding:{x:{field:"date",type:"temporal"},y:{field:"price",type:"quantitative"}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/line-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),LabeledLines=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"lineChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",description:"Multi-series line chart with labels.",data:{url:"https://vega.github.io/vega-lite/examples/data/stocks.csv"},transform:[{filter:"datum.symbol!=='IBM'"}],encoding:{color:{field:"symbol",type:"nominal",legend:null}},layer:[{mark:"line",encoding:{x:{field:"date",type:"temporal",title:"date"},y:{field:"price",type:"quantitative",title:"price"}}},{encoding:{x:{aggregate:"max",field:"date",type:"temporal"},y:{aggregate:{argmax:"date"},field:"price",type:"quantitative",axis:{orient:"left",labelAlign:"right"}}},layer:[{mark:{type:"circle"}},{mark:{type:"text",align:"left",dx:4},encoding:{text:{field:"symbol",type:"nominal"}}}]}]}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/line-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1528:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource);__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Pie Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"pieChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega/v5.json',\n      width: 200,\n      height: 200,\n      data: [\n        {\n          name: 'table',\n          values: [\n            { id: 'A', field: 4 },\n            { id: 'B', field: 6 },\n            { id: 'C', field: 10 },\n            { id: 'D', field: 3 },\n            { id: 'E', field: 7 },\n            { id: 'F', field: 8 }\n          ],\n          transform: [\n            {\n              type: 'pie',\n              field: 'field'\n            }\n          ]\n        }\n      ],\n      scales: [\n        {\n          name: 'color',\n          type: 'ordinal',\n          domain: { data: 'table', field: 'id' },\n          range: { scheme: 'category20' }\n        }\n      ],\n      marks: [\n        {\n          type: 'arc',\n          from: { data: 'table' },\n          encode: {\n            enter: {\n              fill: { scale: 'color', field: 'id' },\n              x: { signal: 'width / 2' },\n              y: { signal: 'height / 2' },\n              padAngle: { value: 0 }\n            },\n            update: {\n              startAngle: { field: 'startAngle' },\n              endAngle: { field: 'endAngle' },\n              outerRadius: { signal: 'width / 2' }\n            }\n          }\n        }\n      ],\n      legends: [\n        {\n          fill: 'color',\n          direction: 'horizontal',\n          encode: {\n            labels: {\n              name: 'legendLabel',\n              enter: { text: { field: 'id' } }\n            }\n          }\n        }\n      ]\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-charts-pie-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:73},startBody:{col:21,line:6},endBody:{col:1,line:73}}}}},title:"Vega Material UI/Charts/Pie Chart"};var Basic=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"pieChart",spec:{$schema:"https://vega.github.io/schema/vega/v5.json",width:200,height:200,data:[{name:"table",values:[{id:"A",field:4},{id:"B",field:6},{id:"C",field:10},{id:"D",field:3},{id:"E",field:7},{id:"F",field:8}],transform:[{type:"pie",field:"field"}]}],scales:[{name:"color",type:"ordinal",domain:{data:"table",field:"id"},range:{scheme:"category20"}}],marks:[{type:"arc",from:{data:"table"},encode:{enter:{fill:{scale:"color",field:"id"},x:{signal:"width / 2"},y:{signal:"height / 2"},padAngle:{value:0}},update:{startAngle:{field:"startAngle"},endAngle:{field:"endAngle"},outerRadius:{signal:"width / 2"}}}}],legends:[{fill:"color",direction:"horizontal",encode:{labels:{name:"legendLabel",enter:{text:{field:"id"}}}}}]}})}),{__STORY__:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Pie Chart' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"pieChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega/v5.json',\n      width: 200,\n      height: 200,\n      data: [\n        {\n          name: 'table',\n          values: [\n            { id: 'A', field: 4 },\n            { id: 'B', field: 6 },\n            { id: 'C', field: 10 },\n            { id: 'D', field: 3 },\n            { id: 'E', field: 7 },\n            { id: 'F', field: 8 }\n          ],\n          transform: [\n            {\n              type: 'pie',\n              field: 'field'\n            }\n          ]\n        }\n      ],\n      scales: [\n        {\n          name: 'color',\n          type: 'ordinal',\n          domain: { data: 'table', field: 'id' },\n          range: { scheme: 'category20' }\n        }\n      ],\n      marks: [\n        {\n          type: 'arc',\n          from: { data: 'table' },\n          encode: {\n            enter: {\n              fill: { scale: 'color', field: 'id' },\n              x: { signal: 'width / 2' },\n              y: { signal: 'height / 2' },\n              padAngle: { value: 0 }\n            },\n            update: {\n              startAngle: { field: 'startAngle' },\n              endAngle: { field: 'endAngle' },\n              outerRadius: { signal: 'width / 2' }\n            }\n          }\n        }\n      ],\n      legends: [\n        {\n          fill: 'color',\n          direction: 'horizontal',\n          encode: {\n            labels: {\n              name: 'legendLabel',\n              enter: { text: { field: 'id' } }\n            }\n          }\n        }\n      ]\n    }}\n  />\n);\n",__ADDS_MAP__:{"vega-material-ui-charts-pie-chart--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:73},startBody:{col:21,line:6},endBody:{col:1,line:73}}},__MAIN_FILE_LOCATION__:"/pie-charts.story.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/charts",__IDS_TO_FRAMEWORKS__:{}})},1529:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Shapes",(function(){return Shapes}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource),__SOURCE_PREFIX__="/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/charts",__STORY__="import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Scatterplot Charts' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"scatterplotChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description:\n        'A scatterplot showing horsepower and miles per gallons for various cars.',\n      data: { url: 'https://vega.github.io/vega-lite/examples/data/cars.json' },\n      mark: 'point',\n      encoding: {\n        x: { field: 'Horsepower', type: 'quantitative' },\n        y: { field: 'Miles_per_Gallon', type: 'quantitative' }\n      }\n    }}\n  />\n);\n\nexport const Shapes = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"scatterplotChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: 'A scatterplot showing horsepower and miles per gallons.',\n      data: { url: 'https://vega.github.io/vega-lite/examples/data/cars.json' },\n      mark: 'point',\n      encoding: {\n        x: { field: 'Horsepower', type: 'quantitative' },\n        y: { field: 'Miles_per_Gallon', type: 'quantitative' },\n        color: { field: 'Origin', type: 'nominal' },\n        shape: { field: 'Origin', type: 'nominal' }\n      }\n    }}\n  />\n);\n",__ADDS_MAP__={"vega-material-ui-charts-scatterplot-charts--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:21},startBody:{col:21,line:6},endBody:{col:1,line:21}},"vega-material-ui-charts-scatterplot-charts--shapes":{startLoc:{col:22,line:23},endLoc:{col:1,line:39},startBody:{col:22,line:23},endBody:{col:1,line:39}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Charts/Scatterplot Charts' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"scatterplotChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description:\n        'A scatterplot showing horsepower and miles per gallons for various cars.',\n      data: { url: 'https://vega.github.io/vega-lite/examples/data/cars.json' },\n      mark: 'point',\n      encoding: {\n        x: { field: 'Horsepower', type: 'quantitative' },\n        y: { field: 'Miles_per_Gallon', type: 'quantitative' }\n      }\n    }}\n  />\n);\n\nexport const Shapes = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"scatterplotChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      description: 'A scatterplot showing horsepower and miles per gallons.',\n      data: { url: 'https://vega.github.io/vega-lite/examples/data/cars.json' },\n      mark: 'point',\n      encoding: {\n        x: { field: 'Horsepower', type: 'quantitative' },\n        y: { field: 'Miles_per_Gallon', type: 'quantitative' },\n        color: { field: 'Origin', type: 'nominal' },\n        shape: { field: 'Origin', type: 'nominal' }\n      }\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-charts-scatterplot-charts--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:21},startBody:{col:21,line:6},endBody:{col:1,line:21}},"vega-material-ui-charts-scatterplot-charts--shapes":{startLoc:{col:22,line:23},endLoc:{col:1,line:39},startBody:{col:22,line:23},endBody:{col:1,line:39}}}}},title:"Vega Material UI/Charts/Scatterplot Charts"};var Basic=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"scatterplotChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",description:"A scatterplot showing horsepower and miles per gallons for various cars.",data:{url:"https://vega.github.io/vega-lite/examples/data/cars.json"},mark:"point",encoding:{x:{field:"Horsepower",type:"quantitative"},y:{field:"Miles_per_Gallon",type:"quantitative"}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/scatterplot-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),Shapes=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"scatterplotChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",description:"A scatterplot showing horsepower and miles per gallons.",data:{url:"https://vega.github.io/vega-lite/examples/data/cars.json"},mark:"point",encoding:{x:{field:"Horsepower",type:"quantitative"},y:{field:"Miles_per_Gallon",type:"quantitative"},color:{field:"Origin",type:"nominal"},shape:{field:"Origin",type:"nominal"}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/scatterplot-chart.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1530:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"SingleValue",(function(){return SingleValue}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource),__SOURCE_PREFIX__="/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/interactive",__STORY__="import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Interactive/Hover Value' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      width: 400,\n      height: 300,\n      layer: [\n        {\n          encoding: {\n            x: { field: 'date', type: 'temporal' },\n            y: { field: 'price', type: 'quantitative' },\n            color: { field: 'symbol', type: 'nominal' }\n          },\n          layer: [\n            { mark: 'line' },\n            {\n              selection: {\n                label: {\n                  type: 'single',\n                  nearest: true,\n                  on: 'mouseover',\n                  encodings: ['x'],\n                  empty: 'none'\n                }\n              },\n              mark: 'point',\n              encoding: {\n                opacity: {\n                  condition: { selection: 'label', value: 1 },\n                  value: 0\n                }\n              }\n            }\n          ]\n        },\n        {\n          transform: [{ filter: { selection: 'label' } }],\n          layer: [\n            {\n              mark: 'rule',\n              encoding: {\n                x: { type: 'temporal', field: 'date' }\n              }\n            },\n            {\n              encoding: {\n                text: { type: 'quantitative', field: 'price' },\n                x: { type: 'temporal', field: 'date' },\n                y: { type: 'quantitative', field: 'price' }\n              },\n              layer: [\n                {\n                  mark: {\n                    type: 'text',\n                    stroke: 'white',\n                    strokeWidth: 2,\n                    align: 'left',\n                    dx: 5,\n                    dy: -5\n                  }\n                },\n                {\n                  mark: { type: 'text', align: 'left', dx: 5, dy: -5 },\n                  encoding: {\n                    color: { type: 'nominal', field: 'symbol' }\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nexport const SingleValue = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaLineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        }\n      },\n      layer: [\n        {\n          encoding: {\n            y: {\n              aggregate: 'sum',\n              field: 'count',\n              type: 'quantitative'\n            }\n          },\n          layer: [\n            {\n              mark: 'area'\n            },\n            {\n              selection: {\n                label: {\n                  type: 'single',\n                  nearest: true,\n                  on: 'mouseover',\n                  encodings: ['x'],\n                  empty: 'none'\n                }\n              },\n              mark: {\n                type: 'point',\n                fill: 'white',\n                size: 100\n              },\n              encoding: {\n                opacity: {\n                  condition: { selection: 'label', value: 1 },\n                  value: 0\n                }\n              }\n            }\n          ]\n        },\n        {\n          transform: [{ filter: { selection: 'label' } }],\n          layer: [\n            {\n              mark: 'rule'\n            },\n            {\n              encoding: {\n                text: {\n                  aggregate: 'sum',\n                  field: 'count',\n                  type: 'quantitative'\n                },\n                y: {\n                  aggregate: 'sum',\n                  field: 'count',\n                  type: 'quantitative'\n                }\n              },\n              layer: [\n                {\n                  mark: {\n                    type: 'text',\n                    stroke: 'white',\n                    strokeWidth: 2,\n                    align: 'left',\n                    dx: 5,\n                    dy: -5\n                  }\n                },\n                {\n                  mark: { type: 'text', align: 'left', dx: 5, dy: -5 }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n",__ADDS_MAP__={"vega-material-ui-interactive-hover-value--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:84},startBody:{col:21,line:6},endBody:{col:1,line:84}},"vega-material-ui-interactive-hover-value--single-value":{startLoc:{col:27,line:86},endLoc:{col:1,line:182},startBody:{col:27,line:86},endBody:{col:1,line:182}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Interactive/Hover Value' };\n\nexport const Basic = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      width: 400,\n      height: 300,\n      layer: [\n        {\n          encoding: {\n            x: { field: 'date', type: 'temporal' },\n            y: { field: 'price', type: 'quantitative' },\n            color: { field: 'symbol', type: 'nominal' }\n          },\n          layer: [\n            { mark: 'line' },\n            {\n              selection: {\n                label: {\n                  type: 'single',\n                  nearest: true,\n                  on: 'mouseover',\n                  encodings: ['x'],\n                  empty: 'none'\n                }\n              },\n              mark: 'point',\n              encoding: {\n                opacity: {\n                  condition: { selection: 'label', value: 1 },\n                  value: 0\n                }\n              }\n            }\n          ]\n        },\n        {\n          transform: [{ filter: { selection: 'label' } }],\n          layer: [\n            {\n              mark: 'rule',\n              encoding: {\n                x: { type: 'temporal', field: 'date' }\n              }\n            },\n            {\n              encoding: {\n                text: { type: 'quantitative', field: 'price' },\n                x: { type: 'temporal', field: 'date' },\n                y: { type: 'quantitative', field: 'price' }\n              },\n              layer: [\n                {\n                  mark: {\n                    type: 'text',\n                    stroke: 'white',\n                    strokeWidth: 2,\n                    align: 'left',\n                    dx: 5,\n                    dy: -5\n                  }\n                },\n                {\n                  mark: { type: 'text', align: 'left', dx: 5, dy: -5 },\n                  encoding: {\n                    color: { type: 'nominal', field: 'symbol' }\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n\nexport const SingleValue = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"areaLineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 300,\n      height: 200,\n      data: {\n        url:\n          'https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json'\n      },\n      encoding: {\n        x: {\n          timeUnit: 'yearmonth',\n          field: 'date',\n          type: 'temporal',\n          axis: { format: '%Y' }\n        }\n      },\n      layer: [\n        {\n          encoding: {\n            y: {\n              aggregate: 'sum',\n              field: 'count',\n              type: 'quantitative'\n            }\n          },\n          layer: [\n            {\n              mark: 'area'\n            },\n            {\n              selection: {\n                label: {\n                  type: 'single',\n                  nearest: true,\n                  on: 'mouseover',\n                  encodings: ['x'],\n                  empty: 'none'\n                }\n              },\n              mark: {\n                type: 'point',\n                fill: 'white',\n                size: 100\n              },\n              encoding: {\n                opacity: {\n                  condition: { selection: 'label', value: 1 },\n                  value: 0\n                }\n              }\n            }\n          ]\n        },\n        {\n          transform: [{ filter: { selection: 'label' } }],\n          layer: [\n            {\n              mark: 'rule'\n            },\n            {\n              encoding: {\n                text: {\n                  aggregate: 'sum',\n                  field: 'count',\n                  type: 'quantitative'\n                },\n                y: {\n                  aggregate: 'sum',\n                  field: 'count',\n                  type: 'quantitative'\n                }\n              },\n              layer: [\n                {\n                  mark: {\n                    type: 'text',\n                    stroke: 'white',\n                    strokeWidth: 2,\n                    align: 'left',\n                    dx: 5,\n                    dy: -5\n                  }\n                },\n                {\n                  mark: { type: 'text', align: 'left', dx: 5, dy: -5 }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-interactive-hover-value--basic":{startLoc:{col:21,line:6},endLoc:{col:1,line:84},startBody:{col:21,line:6},endBody:{col:1,line:84}},"vega-material-ui-interactive-hover-value--single-value":{startLoc:{col:27,line:86},endLoc:{col:1,line:182},startBody:{col:27,line:86},endBody:{col:1,line:182}}}}},title:"Vega Material UI/Interactive/Hover Value"};var Basic=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"lineChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",data:{url:"https://vega.github.io/vega-lite/examples/data/stocks.csv"},width:400,height:300,layer:[{encoding:{x:{field:"date",type:"temporal"},y:{field:"price",type:"quantitative"},color:{field:"symbol",type:"nominal"}},layer:[{mark:"line"},{selection:{label:{type:"single",nearest:!0,on:"mouseover",encodings:["x"],empty:"none"}},mark:"point",encoding:{opacity:{condition:{selection:"label",value:1},value:0}}}]},{transform:[{filter:{selection:"label"}}],layer:[{mark:"rule",encoding:{x:{type:"temporal",field:"date"}}},{encoding:{text:{type:"quantitative",field:"price"},x:{type:"temporal",field:"date"},y:{type:"quantitative",field:"price"}},layer:[{mark:{type:"text",stroke:"white",strokeWidth:2,align:"left",dx:5,dy:-5}},{mark:{type:"text",align:"left",dx:5,dy:-5},encoding:{color:{type:"nominal",field:"symbol"}}}]}]}]}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/hover-value.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),SingleValue=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"areaLineChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",width:300,height:200,data:{url:"https://vega.github.io/vega-lite/examples/data/unemployment-across-industries.json"},encoding:{x:{timeUnit:"yearmonth",field:"date",type:"temporal",axis:{format:"%Y"}}},layer:[{encoding:{y:{aggregate:"sum",field:"count",type:"quantitative"}},layer:[{mark:"area"},{selection:{label:{type:"single",nearest:!0,on:"mouseover",encodings:["x"],empty:"none"}},mark:{type:"point",fill:"white",size:100},encoding:{opacity:{condition:{selection:"label",value:1},value:0}}}]},{transform:[{filter:{selection:"label"}}],layer:[{mark:"rule"},{encoding:{text:{aggregate:"sum",field:"count",type:"quantitative"},y:{aggregate:"sum",field:"count",type:"quantitative"}},layer:[{mark:{type:"text",stroke:"white",strokeWidth:2,align:"left",dx:5,dy:-5}},{mark:{type:"text",align:"left",dx:5,dy:-5}}]}]}]}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/hover-value.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1531:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SingleValue",(function(){return SingleValue})),__webpack_require__.d(__webpack_exports__,"MultiValue",(function(){return MultiValue}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(20),addSourceDecorator=(__webpack_require__(47).withSource,__webpack_require__(47).addSource),__SOURCE_PREFIX__="/Users/daniel/Workspace/work/material-vega/packages/material-ui/src/stories/interactive",__STORY__="import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Interactive/Tooltip' };\n\nexport const SingleValue = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"verticalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 200,\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      mark: 'bar',\n      encoding: {\n        x: {\n          field: 'quarter',\n          type: 'nominal',\n          axis: {\n            ticks: false\n          },\n          band: 0.5\n        },\n        y: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        },\n        tooltip: {\n          field: 'percent',\n          type: 'quantitative',\n          format: '.0p'\n        }\n      }\n    }}\n  />\n);\n\nexport const MultiValue = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      width: 400,\n      height: 300,\n      encoding: { x: { field: 'date', type: 'temporal' } },\n      layer: [\n        {\n          encoding: {\n            color: { field: 'symbol', type: 'nominal' },\n            y: { field: 'price', type: 'quantitative' }\n          },\n          layer: [\n            { mark: 'line' },\n            { transform: [{ filter: { selection: 'hover' } }], mark: 'point' }\n          ]\n        },\n        {\n          transform: [{ pivot: 'symbol', value: 'price', groupby: ['date'] }],\n          mark: 'rule',\n          encoding: {\n            opacity: {\n              condition: { value: 0.3, selection: 'hover' },\n              value: 0\n            },\n            tooltip: [\n              { field: 'AAPL', type: 'quantitative' },\n              { field: 'AMZN', type: 'quantitative' },\n              { field: 'GOOG', type: 'quantitative' },\n              { field: 'IBM', type: 'quantitative' },\n              { field: 'MSFT', type: 'quantitative' }\n            ]\n          },\n          selection: {\n            hover: {\n              type: 'single',\n              fields: ['date'],\n              nearest: true,\n              on: 'mouseover',\n              empty: 'none',\n              clear: 'mouseout'\n            }\n          }\n        }\n      ]\n    }}\n  />\n);\n",__ADDS_MAP__={"vega-material-ui-interactive-tooltip--single-value":{startLoc:{col:27,line:6},endLoc:{col:1,line:45},startBody:{col:27,line:6},endBody:{col:1,line:45}},"vega-material-ui-interactive-tooltip--multi-value":{startLoc:{col:26,line:47},endLoc:{col:1,line:99},startBody:{col:26,line:47},endBody:{col:1,line:99}}},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={};__webpack_exports__.default={parameters:{storySource:{source:"import React, { ReactElement } from 'react';\nimport { MuiVegaLite } from '../..';\n\nexport default { title: 'Vega Material UI/Interactive/Tooltip' };\n\nexport const SingleValue = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"verticalBarChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      width: 200,\n      data: {\n        values: [\n          { quarter: 'Q1', percent: 0.2 },\n          { quarter: 'Q2', percent: 0.28 },\n          { quarter: 'Q3', percent: 0.32 },\n          { quarter: 'Q4', percent: 0.39 }\n        ]\n      },\n      mark: 'bar',\n      encoding: {\n        x: {\n          field: 'quarter',\n          type: 'nominal',\n          axis: {\n            ticks: false\n          },\n          band: 0.5\n        },\n        y: {\n          field: 'percent',\n          type: 'quantitative',\n          axis: {\n            format: 'p'\n          }\n        },\n        tooltip: {\n          field: 'percent',\n          type: 'quantitative',\n          format: '.0p'\n        }\n      }\n    }}\n  />\n);\n\nexport const MultiValue = (): ReactElement => (\n  <MuiVegaLite\n    variant=\"lineChart\"\n    spec={{\n      $schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n      data: {\n        url: 'https://vega.github.io/vega-lite/examples/data/stocks.csv'\n      },\n      width: 400,\n      height: 300,\n      encoding: { x: { field: 'date', type: 'temporal' } },\n      layer: [\n        {\n          encoding: {\n            color: { field: 'symbol', type: 'nominal' },\n            y: { field: 'price', type: 'quantitative' }\n          },\n          layer: [\n            { mark: 'line' },\n            { transform: [{ filter: { selection: 'hover' } }], mark: 'point' }\n          ]\n        },\n        {\n          transform: [{ pivot: 'symbol', value: 'price', groupby: ['date'] }],\n          mark: 'rule',\n          encoding: {\n            opacity: {\n              condition: { value: 0.3, selection: 'hover' },\n              value: 0\n            },\n            tooltip: [\n              { field: 'AAPL', type: 'quantitative' },\n              { field: 'AMZN', type: 'quantitative' },\n              { field: 'GOOG', type: 'quantitative' },\n              { field: 'IBM', type: 'quantitative' },\n              { field: 'MSFT', type: 'quantitative' }\n            ]\n          },\n          selection: {\n            hover: {\n              type: 'single',\n              fields: ['date'],\n              nearest: true,\n              on: 'mouseover',\n              empty: 'none',\n              clear: 'mouseout'\n            }\n          }\n        }\n      ]\n    }}\n  />\n);\n",locationsMap:{"vega-material-ui-interactive-tooltip--single-value":{startLoc:{col:27,line:6},endLoc:{col:1,line:45},startBody:{col:27,line:6},endBody:{col:1,line:45}},"vega-material-ui-interactive-tooltip--multi-value":{startLoc:{col:26,line:47},endLoc:{col:1,line:99},startBody:{col:26,line:47},endBody:{col:1,line:99}}}}},title:"Vega Material UI/Interactive/Tooltip"};var SingleValue=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"verticalBarChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",width:200,data:{values:[{quarter:"Q1",percent:.2},{quarter:"Q2",percent:.28},{quarter:"Q3",percent:.32},{quarter:"Q4",percent:.39}]},mark:"bar",encoding:{x:{field:"quarter",type:"nominal",axis:{ticks:!1},band:.5},y:{field:"percent",type:"quantitative",axis:{format:"p"}},tooltip:{field:"percent",type:"quantitative",format:".0p"}}}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/tooltip.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__}),MultiValue=addSourceDecorator((function(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(___WEBPACK_IMPORTED_MODULE_1__.a,{variant:"lineChart",spec:{$schema:"https://vega.github.io/schema/vega-lite/v4.json",data:{url:"https://vega.github.io/vega-lite/examples/data/stocks.csv"},width:400,height:300,encoding:{x:{field:"date",type:"temporal"}},layer:[{encoding:{color:{field:"symbol",type:"nominal"},y:{field:"price",type:"quantitative"}},layer:[{mark:"line"},{transform:[{filter:{selection:"hover"}}],mark:"point"}]},{transform:[{pivot:"symbol",value:"price",groupby:["date"]}],mark:"rule",encoding:{opacity:{condition:{value:.3,selection:"hover"},value:0},tooltip:[{field:"AAPL",type:"quantitative"},{field:"AMZN",type:"quantitative"},{field:"GOOG",type:"quantitative"},{field:"IBM",type:"quantitative"},{field:"MSFT",type:"quantitative"}]},selection:{hover:{type:"single",fields:["date"],nearest:!0,on:"mouseover",empty:"none",clear:"mouseout"}}}]}})}),{__STORY__:__STORY__,__ADDS_MAP__:__ADDS_MAP__,__MAIN_FILE_LOCATION__:"/tooltip.story.tsx",__MODULE_DEPENDENCIES__:__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__:__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__:__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__:__IDS_TO_FRAMEWORKS__})},1536:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var client=__webpack_require__(127),react=__webpack_require__(632),lib=__webpack_require__(644),storybook_addon_preview_original_lib=__webpack_require__(633),node_modules_react=__webpack_require__(1),react_default=__webpack_require__.n(node_modules_react),createMuiTheme=__webpack_require__(643),ThemeProvider=__webpack_require__(1554),Box=__webpack_require__(649),esm=__webpack_require__(2),ThemeContext=function(_ref){var themeShade=_ref.theme,primary=_ref.primary,children=_ref.children,theme=Object(node_modules_react.useMemo)((function(){return Object(createMuiTheme.a)({palette:{type:themeShade,primary:primary}})}),[themeShade,primary]);return react_default.a.createElement(ThemeProvider.a,{theme:theme},react_default.a.createElement(Box.a,{flex:1,p:1,bgcolor:"background.paper"},children))};ThemeContext.displayName="ThemeContext";var contexts=[{icon:"paintbrush",title:"Theme",components:[ThemeContext],params:[{name:"Light Theme",props:{theme:"light",primary:{light:esm.a.deepPurple.A200,main:esm.a.deepPurple.A700,dark:esm.a.deepPurple[800]}},default:!0},{name:"Light Theme (Teal)",props:{theme:"light",primary:esm.a.teal}},{name:"Dark Theme",props:{theme:"dark",primary:esm.a.deepPurple}}]}],src=__webpack_require__(20);__webpack_require__(1514);Object(src.b)(),Object(client.addDecorator)(Object(react.a)(contexts)),Object(client.addDecorator)(lib.a),Object(client.addDecorator)(storybook_addon_preview_original_lib.a),Object(client.addParameters)({options:{showRoots:!0}})},20:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return MuiVegaLite})),__webpack_require__.d(__webpack_exports__,"b",(function(){return overrideColorSchemes}));__webpack_require__(4),__webpack_require__(11),__webpack_require__(23),__webpack_require__(55),__webpack_require__(49),__webpack_require__(67),__webpack_require__(16),__webpack_require__(28),__webpack_require__(15),__webpack_require__(52),__webpack_require__(38),__webpack_require__(19),__webpack_require__(5),__webpack_require__(91),__webpack_require__(53),__webpack_require__(1486),__webpack_require__(1487),__webpack_require__(8),__webpack_require__(12),__webpack_require__(39),__webpack_require__(17),__webpack_require__(51),__webpack_require__(18);var react=__webpack_require__(1),react_default=__webpack_require__.n(react),vega=__webpack_require__(30),Vega=__webpack_require__(1562),useTheme=__webpack_require__(1556),materialVegaOptionDefaults={font:'"Roboto", "Helvetica", "Arial", sans-serif',labelPadding:8,barCornerRadius:2,textColor:"rgba(0, 0, 0, 0.87)",secondaryTextColor:"rgba(0, 0, 0, 0.54)",dividerColor:"rgba(0, 0, 0, 0.12)",color:void 0,background:"transparent",thickDomainLineWidth:2};__webpack_require__(13);var createCommonConfig=function(options){return{background:options.background,style:{"guide-label":{font:options.font,fontWeight:"normal"},"guide-title":{font:options.font,fontWeight:"normal"},"group-title":{font:options.font,fontWeight:"normal"}},arc:{fill:options.color},area:{fill:options.color},bar:{fill:options.color},line:{stroke:options.color},path:{stroke:options.color},point:{color:options.color},rect:{fill:options.color},shape:{stroke:options.color},symbol:{fill:options.color},axis:{domainColor:options.dividerColor,tickColor:options.dividerColor,gridColor:options.dividerColor,gridOpacity:.5,grid:!1,labelColor:options.secondaryTextColor,labelFontSize:12,labelPadding:options.labelPadding,labelAngle:0,titleColor:options.secondaryTextColor,titleFontSize:12,title:null},axisY:{orient:"right",labelAlign:"left",domain:!1,ticks:!1},rule:{stroke:options.secondaryTextColor,strokeDash:[2,2]},view:{strokeWidth:0},legend:{orient:"bottom",title:null,titleColor:options.textColor,titleFontSize:12,labelColor:options.textColor,labelFontSize:12},range:{category:vega.scheme("tableau10")}}},createVerticalCommonConfig=function(){return{axisY:{grid:!0}}},createBarConfig=function(){return{}},createVerticalBarConfig=function(options){return{axisBottom:{domain:!0,domainWidth:options.thickDomainLineWidth},bar:{cornerRadiusTopLeft:options.barCornerRadius,cornerRadiusTopRight:options.barCornerRadius}}},themes={verticalBarChart:[createCommonConfig,createVerticalCommonConfig,createBarConfig,createVerticalBarConfig],focusedVerticalBarChart:[createCommonConfig,createVerticalCommonConfig,createBarConfig,createVerticalBarConfig,function(){return{axis:{labels:!1,ticks:!1},axisBand:{labels:!0},axisBottom:{domain:!1},axisLeft:{domain:!1},axisY:{grid:!1},axisX:{grid:!1}}}],horizontalBarChart:[createCommonConfig,function(){return{axisX:{grid:!0}}},createBarConfig,function(options){return{axisLeft:{domain:!0,domainWidth:options.thickDomainLineWidth},axisY:{orient:"left",labelAlign:"right"},bar:{cornerRadiusTopRight:options.barCornerRadius,cornerRadiusBottomRight:options.barCornerRadius}}}],lineChart:[createCommonConfig,createVerticalCommonConfig,function(){return{line:{strokeWidth:1.5}}}],areaChart:[createCommonConfig,createVerticalCommonConfig,function(options){return{axis:{gridDash:[4,2]},axisBottom:{domain:!0,domainWidth:options.thickDomainLineWidth}}}],areaLineChart:[createCommonConfig,createVerticalCommonConfig,function(options){return{axisBottom:{domain:!0,domainWidth:options.thickDomainLineWidth},line:{strokeWidth:2},area:{line:!0,fillOpacity:.2}}}],pieChart:[createCommonConfig,function(){return{}}],donutChart:[createCommonConfig,function(options){return{style:{percent:{font:options.font,fontWeight:"normal",fill:options.textColor}}}}],scatterplotChart:[createCommonConfig,function(){return{axis:{grid:!0},axisY:{orient:"left",labelAlign:"right",domain:!0},point:{filled:!0}}}]};function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function createTheme(options,theme){var opts=function extendDefaults(options){var opts=Object.assign(materialVegaOptionDefaults,{});for(var key in materialVegaOptionDefaults)key in options&&void 0!==options[key]&&(opts[key]=options[key]);return opts}(options),configs=themes[theme].map((function(createConfig){return createConfig(opts)}));return vega.mergeConfig.apply(void 0,_toConsumableArray(configs))}var defaultVegaTooltipOptions={offsetX:10,offsetY:10,maxDepth:2};__webpack_require__(82);var clsx_m=__webpack_require__(29),makeStyles=__webpack_require__(1555),Typography=__webpack_require__(254),TableContainer=__webpack_require__(1557),Table=__webpack_require__(1558),TableBody=__webpack_require__(1559),TableRow=__webpack_require__(1560),TableCell=__webpack_require__(1561),Paper=__webpack_require__(1540);function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function stringify(obj,maxDepth){return JSON.stringify(obj,function replacer(maxDepth){var stack=[];return function(key,value){if("object"!==_typeof(value)||null===value)return value;var pos=stack.indexOf(this)+1;return stack.length=pos,stack.length>maxDepth?"[Object]":0<=stack.indexOf(value)?"[Circular]":(stack.push(value),value)}}(maxDepth))}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function MuiVegaTooltip_typeof(obj){return(MuiVegaTooltip_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}var useStyles=Object(makeStyles.a)((function(theme){return{root:{visibility:"hidden",padding:theme.spacing(1),position:"absolute",zIndex:theme.zIndex.tooltip,pointerEvents:"none"},visible:{visibility:"visible"},tableCell:{borderBottom:"none"}}}),{name:"MuiVegaTooltip"}),MuiVegaTooltipContent=function(props){var _theme$vegaTooltip$ma,_theme$vegaTooltip,classes=props.classes,value=props.value,maxDepth=null!==(_theme$vegaTooltip$ma=null===(_theme$vegaTooltip=Object(useTheme.a)().vegaTooltip)||void 0===_theme$vegaTooltip?void 0:_theme$vegaTooltip.maxDepth)&&void 0!==_theme$vegaTooltip$ma?_theme$vegaTooltip$ma:defaultVegaTooltipOptions.maxDepth;if(Array.isArray(value))return react_default.a.createElement(react_default.a.Fragment,null,"[".concat(value.map((function(v){return"string"==typeof v?v:stringify(v,maxDepth)})).join(", "),"]"));if("object"===MuiVegaTooltip_typeof(value)&&null!==value){var titleElement,tableElement,_ref=value,title=_ref.title,rest=_objectWithoutProperties(_ref,["title"]);title&&(titleElement=react_default.a.createElement(Typography.a,{key:"title",component:"h2",variant:"h5"},title+""));var keys=Object.keys(rest);return 0<keys.length&&(tableElement=react_default.a.createElement(TableContainer.a,null,react_default.a.createElement(Table.a,{size:"small"},react_default.a.createElement(TableBody.a,null,keys.map((function(key){var val=rest[key];if(void 0!==val)return"object"===MuiVegaTooltip_typeof(val)&&null!==val&&(val=stringify(val,maxDepth)),react_default.a.createElement(TableRow.a,{key:key},react_default.a.createElement(TableCell.a,{variant:"head",align:"right",className:classes.tableCell},key),react_default.a.createElement(TableCell.a,{className:classes.tableCell},val+""))})))))),react_default.a.createElement(react_default.a.Fragment,null,titleElement,tableElement)}return react_default.a.createElement(react_default.a.Fragment,null,value+"")},MuiVegaTooltip=function(props){var _props$position=props.position,x=(_props$position=void 0===_props$position?{x:0,y:0}:_props$position).x,y=_props$position.y,value=props.value,classes=useStyles(props);return react_default.a.createElement(Paper.a,{className:Object(clsx_m.a)(classes.root,null!==value&&classes.visible),style:{left:x,top:y}},react_default.a.createElement(MuiVegaTooltipContent,{classes:classes,value:value}))};function _extends(){return(_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function MuiVega_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return MuiVega_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return MuiVega_arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function MuiVega_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null!=arguments[i]?arguments[i]:{},i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}));return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function MuiVega_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function MuiVega_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],0<=excluded.indexOf(key)||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],0<=excluded.indexOf(key)||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}MuiVegaTooltip.displayName="MuiVegaTooltip",MuiVegaTooltip=Object(react.memo)(MuiVegaTooltip);var VegaMemo=Object(react.memo)(Vega.a),MuiVega=function(props){var variant=props.variant,_props$color=props.color,color=void 0===_props$color?"primary":_props$color,_props$background=props.background,background=void 0===_props$background?"transparent":_props$background,tooltipProp=props.tooltip,_props$TooltipCompone=props.TooltipComponent,TooltipComponent=void 0===_props$TooltipCompone?MuiVegaTooltip:_props$TooltipCompone,configProp=props.config,themeOptions=props.themeOptions,vegaProps=MuiVega_objectWithoutProperties(props,["variant","color","background","tooltip","TooltipComponent","config","themeOptions"]),theme=Object(useTheme.a)(),_defaultVegaTooltipOp=_objectSpread({},defaultVegaTooltipOptions,{},theme.vegaTooltip),offsetX=_defaultVegaTooltipOp.offsetX,offsetY=_defaultVegaTooltipOp.offsetY;if("string"==typeof configProp)throw new TypeError("@material-vega/material-ui does not support a string `config`.");var ref=Object(react.useRef)(),_useReducer2=_slicedToArray(Object(react.useReducer)((function(state,_ref){var event=_ref.event,value=_ref.value;if(null==value||""===value)return null;var _calculatePosition=function calculatePosition(event,tooltipBox,offsetX,offsetY){var x=event.clientX+offsetX;x+tooltipBox.width>window.innerWidth&&(x=+event.clientX-offsetX-tooltipBox.width);var y=event.clientY+offsetY;return y+tooltipBox.height>window.innerHeight&&(y=+event.clientY-offsetY-tooltipBox.height),{x:x,y:y}}(event,ref.current.vegaEmbed.current.containerRef.current.getBoundingClientRect(),offsetX,offsetY);return{position:{x:_calculatePosition.x,y:_calculatePosition.y},value:value}}),void 0),2),tooltipState=_useReducer2[0],dispatchTooltip=_useReducer2[1],tooltipHandler=Object(react.useCallback)((function(handler,event,item,value){dispatchTooltip({handler:handler,event:event,item:item,value:value})}),[]),muiThemeOptions=function useMuiVegaOptions(prefs){var color=prefs.color,background=prefs.background,theme=Object(useTheme.a)();return Object(react.useMemo)((function(){return{font:theme.typography.fontFamily,labelPadding:theme.spacing(1),textColor:theme.palette.text.primary,secondaryTextColor:theme.palette.text.secondary,dividerColor:theme.palette.divider,color:theme.palette[color].main,background:"transparent"===background?"transparent":theme.palette.background[background],barCornerRadius:theme.shape.barCornerRadius,thickDomainLineWidth:2}}),[theme,color,background])}({color:color,background:background}),config=Object(react.useMemo)((function(){return Object(vega.mergeConfig)(createTheme(_objectSpread({},muiThemeOptions,{},themeOptions),variant),configProp||{})}),[theme,color,themeOptions]);return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(VegaMemo,_extends({ref:ref,config:config,tooltip:tooltipProp||tooltipHandler,renderer:"svg"},vegaProps)),void 0!==tooltipState&&react_default.a.createElement(TooltipComponent,_extends({value:null},tooltipState)))};function MuiVegaLite_extends(){return(MuiVegaLite_extends=Object.assign||function(target){for(var source,i=1;i<arguments.length;i++)for(var key in source=arguments[i])Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key]);return target}).apply(this,arguments)}var MuiVegaLite=function(props){return react_default.a.createElement(MuiVega,MuiVegaLite_extends({},props,{mode:"vega-lite"}))};MuiVegaLite.displayName="MuiVegaLite";var esm=__webpack_require__(2);function overrideColorSchemes(){vega.scheme("accent",[esm.a.green[300],esm.a.deepPurple[200],esm.a.orange[200],esm.a.yellow.A100,esm.a.blue[700],esm.a.pink.A700,esm.a.orange[900],esm.a.grey[700]]),vega.scheme("category10",[esm.a.blue[700],esm.a.yellow[900],esm.a.green[600],esm.a.red.A400,esm.a.deepPurple[300],esm.a.brown[500],esm.a.pink.A100,esm.a.grey[600],esm.a.lime[700],esm.a.cyan[500]]),vega.scheme("category20",[esm.a.blue[700],esm.a.blue[200],esm.a.yellow[900],esm.a.orange[300],esm.a.green[600],esm.a.green[200],esm.a.red[700],esm.a.red[200],esm.a.deepPurple[300],esm.a.deepPurple[200],esm.a.brown[500],esm.a.brown[200],esm.a.pink[300],esm.a.pink[100],esm.a.grey[600],esm.a.grey[400],esm.a.lime[700],esm.a.lime[400],esm.a.cyan[500],esm.a.cyan[200]]),vega.scheme("category20b",[esm.a.indigo[700],esm.a.indigo[500],esm.a.indigo[400],esm.a.indigo[200],esm.a.lightGreen[800],esm.a.lightGreen[600],esm.a.lime[600],esm.a.lime[400],esm.a.amber[900],esm.a.amber[800],esm.a.amber[600],esm.a.amber[200],esm.a.pink[800],esm.a.pink[400],esm.a.pink[300],esm.a.pink[200],esm.a.purple[500],esm.a.purple[400],esm.a.purple[300],esm.a.purple[200]]),vega.scheme("category20c",[esm.a.blue[600],esm.a.blue[300],esm.a.blue[200],esm.a.blue[100],esm.a.orange[900],esm.a.orange[700],esm.a.orange[300],esm.a.orange[200],esm.a.green[600],esm.a.green[300],esm.a.green[200],esm.a.green[100],esm.a.indigo[400],esm.a.indigo[300],esm.a.indigo[100],esm.a.indigo[50],esm.a.grey[700],esm.a.grey[500],esm.a.grey[400],esm.a.grey[300]]),vega.scheme("dark2",[esm.a.teal[500],esm.a.orange[900],esm.a.indigo[400],esm.a.pink[500],esm.a.lightGreen[700],esm.a.amber[700],esm.a.brown[400],esm.a.grey[700]]),vega.scheme("paired",[esm.a.lightBlue[200],esm.a.blue[700],esm.a.lightGreen[200],esm.a.green[600],esm.a.red[200],esm.a.red[700],esm.a.orange[300],esm.a.orange[700],esm.a.purple[100],esm.a.deepPurple[500],esm.a.yellow.A100,esm.a.brown[500]]),vega.scheme("pastel1",[esm.a.deepOrange[200],esm.a.blue[200],esm.a.green[100],esm.a.purple[100],esm.a.orange[100],esm.a.yellow[50],esm.a.brown[100],esm.a.pink[50],esm.a.grey[100]]),vega.scheme("pastel2",[esm.a.teal[100],esm.a.deepOrange[100],esm.a.blue[100],esm.a.pink[100],esm.a.lightGreen.A100,esm.a.yellow[200],esm.a.brown[100],esm.a.grey[400]]),vega.scheme("set1",[esm.a.red.A400,esm.a.blue[600],esm.a.green[500],esm.a.purple[400],esm.a.yellow[900],esm.a.yellow.A200,esm.a.brown[500],esm.a.pink.A100,esm.a.grey[500]]),vega.scheme("set2",[esm.a.teal[300],esm.a.deepOrange[300],esm.a.indigo[200],esm.a.pink[200],esm.a.lightGreen[300],esm.a.yellow[600],esm.a.orange[300],esm.a.grey[400]]),vega.scheme("set3",[esm.a.teal[200],esm.a.yellow.A100,esm.a.deepPurple[100],esm.a.red.A100,esm.a.blue[300],esm.a.orange[300],esm.a.lightGreen[300],esm.a.pink[100],esm.a.grey.A100,esm.a.purple[300],esm.a.green[100],esm.a.yellow[500]]),vega.scheme("tableau10",[esm.a.blue[600],esm.a.yellow[900],esm.a.red[400],esm.a.teal[300],esm.a.green[600],esm.a.amber[400],esm.a.pink[300],esm.a.pink[200],esm.a.brown[400],esm.a.grey[400]]),vega.scheme("tableau20",[esm.a.blue[600],esm.a.blue[200],esm.a.orange[700],esm.a.orange[300],esm.a.green[600],esm.a.green[300],esm.a.lime[800],esm.a.lime[400],esm.a.teal[400],esm.a.teal[200],esm.a.red[400],esm.a.red[200],esm.a.grey[600],esm.a.grey[400],esm.a.pink[300],esm.a.pink[100],esm.a.deepPurple[300],esm.a.deepPurple[200],esm.a.brown[400],esm.a.brown[200]])}},658:function(module,exports,__webpack_require__){__webpack_require__(659),__webpack_require__(801),__webpack_require__(802),__webpack_require__(1453),__webpack_require__(1536),module.exports=__webpack_require__(1518)},721:function(module,exports){}},[[658,1,2]]]);
//# sourceMappingURL=main.f771bcd579f77101e7fc.bundle.js.map